name: Build Prebuilt u-boot

on:
  push:
    branches:
      - canmv_k230
      - action

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: uboot
          fetch-depth: 1

      - name: Get Git revision and set as environment variable
        id: get_revision
        run: |
          cd ${{ github.workspace }}/uboot
          revision=$(git describe --long --tag --dirty --always)
          echo "REVISION=$revision" >> $GITHUB_ENV

      - name: Setup SSH
        run: |
          git config --global user.name kendryte747
          git config --global user.email kendryte747@gmail.com
          mkdir -p ~/.ssh
          echo "${{ secrets.ACTIONS_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Prepare Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential bison flex gcc libncurses5-dev \
            libssl-dev pkg-config python3 python3-pip python-is-python3 python3-venv
          python3 -m venv ~/.canmv_venv
          source ~/.canmv_venv/bin/activate
          pip3 install pycryptodome gmssl jsonschema jinja2

      - name: Cache RISC-V Toolchain
        id: cache-toolchain
        uses: actions/cache@v4
        with:
          path: ~/.kendryte/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.0/
          key: k230-toolchain-v2.6.0

      - name: Download toolchains
        if: steps.cache-toolchain.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.kendryte
          wget -q https://github.com/kendryte/canmv_k230/releases/download/v1.1/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.0.tar.bz2 -O /tmp/toolchain.tar.bz2
          tar -xjf /tmp/toolchain.tar.bz2 -C ~/.kendryte
          ls -alth ~/.kendryte

      - name: Build Prebuilt u-boot
        run: |
          cd ${{ github.workspace }}/uboot
          source ~/.canmv_venv/bin/activate
          export ARCH=riscv
          export CROSS_COMPILE=$HOME/.kendryte/Xuantie-900-gcc-linux-5.10.4-glibc-x86_64-V2.6.0/bin/riscv64-unknown-linux-gnu-

          defconfigs=(
            k230_aihardware_defconfig
            k230_canmv_defconfig
            k230_canmv_01studio_defconfig
            k230_canmv_dongshanpi_defconfig
            k230_canmv_lckfb_defconfig
            k230_canmv_v3p0_defconfig
            k230_evb_defconfig
            k230_evb_spinand_defconfig
            k230_labplus_1956_defconfig
            k230d_canmv_atk_dnk230d_defconfig
            k230d_canmv_bpi_zero_defconfig
            k230d_canmv_junroc_ai_cam_defconfig
            k230d_labplus_ai_camera_defconfig
          )

          for UBOOT_DEFCONFIG in "${defconfigs[@]}"; do
            echo "=============================="
            echo " Building U-Boot: ${UBOOT_DEFCONFIG}"
            echo "=============================="

            base_name=${UBOOT_DEFCONFIG%_defconfig}

            # Setup output directories
            export SDK_UBOOT_BUILD_DIR=$HOME/build/${base_name}
            mkdir -p ${SDK_UBOOT_BUILD_DIR}
            mkdir -p ~/artifacts/${base_name}

            # Build
            make ${UBOOT_DEFCONFIG} O=${SDK_UBOOT_BUILD_DIR} || exit $?
            make -j$(nproc) -C ${SDK_UBOOT_BUILD_DIR} || exit $?

            # Also copy artifacts to artifacts folder
            cp ${SDK_UBOOT_BUILD_DIR}/u-boot.bin ~/artifacts/${base_name}/u-boot.bin || echo "u-boot.bin missing"
            cp ${SDK_UBOOT_BUILD_DIR}/spl/u-boot-spl.bin ~/artifacts/${base_name}/u-boot-spl.bin || echo "u-boot-spl.bin missing"
          done

          # build fastboot uboot
          rm -rf ~/build
          cp .github/workflows/sdk_autoconf.h.fastboot board/kendryte/common/sdk_autoconf.h

          for UBOOT_DEFCONFIG in "${defconfigs[@]}"; do
            echo "=============================="
            echo " Building U-Boot: ${UBOOT_DEFCONFIG}"
            echo "=============================="

            base_name=${UBOOT_DEFCONFIG%_defconfig}

            # Setup output directories
            export SDK_UBOOT_BUILD_DIR=$HOME/build/${base_name}
            mkdir -p ${SDK_UBOOT_BUILD_DIR}
            #mkdir -p ~/artifacts/${base_name}

            # Build
            make ${UBOOT_DEFCONFIG} O=${SDK_UBOOT_BUILD_DIR} || exit $?
            make -j$(nproc) -C ${SDK_UBOOT_BUILD_DIR} || exit $?

            cp ${SDK_UBOOT_BUILD_DIR}/spl/u-boot-spl.bin ~/artifacts/${base_name}/u-boot-spl-fastboot.bin || echo "u-boot-spl.bin missing"
          done

      - uses: actions/upload-artifact@v4
        if: github.ref != 'refs/heads/dev'
        with:
          name: "u-boot-prebuilt-${{ env.REVISION }}"
          path: ~/artifacts
          if-no-files-found: error
          compression-level: 0

      - name: Checkout RTOS SDK
        uses: actions/checkout@v4
        with:
          repository: kendryte/k230_rtos_sdk
          path: rtos_sdk
          fetch-depth: 1

      - name: Install Prebuilt u-boot
        run: |
          # Capture the U-Boot commit hash
          cd ${{ github.workspace }}/uboot
          UBOOT_COMMIT=$(git rev-parse HEAD)

          # Install prebuilt artifacts into rtos_sdk/boards
          python3 .github/workflows/install_uboot_artifacts.py \
            --source ~/artifacts \
            --target ${{ github.workspace }}/rtos_sdk/boards

          # Commit the installed files to RTOS SDK
          cd ${{ github.workspace }}/rtos_sdk

          # Set up Git identity
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add boards
          git commit -m "Update prebuilt u-boot from https://github.com/canmv-k230/u-boot/commit/${UBOOT_COMMIT}"

          # Push using token-authenticated ssh
          git remote set-url origin git@github.com:kendryte/k230_rtos_sdk.git
          git push origin HEAD

      - name: Clean up SSH private key
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa
